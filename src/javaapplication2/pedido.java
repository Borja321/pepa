/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/*esto es uina prueba*/
package javaapplication2;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author Borja
 */
public class pedido extends javax.swing.JFrame {
static public ResultSet r;
static public Connection connection;
int var;
    public pedido() throws SQLException {
       initComponents();
        CONFIRMAR.setVisible(false);
        CANCELAR.setVisible(false);
         String url = "jdbc:mysql://localhost:3306/entornodedesarrollo";
        String user = "root";
        String pass = "";
        Connection connection = DriverManager.getConnection(url,user,pass);
        
        Statement s = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        String query = "select * from pedidos";
        r = s.executeQuery(query);
        r.first();
        NUM_PEDIDO.setText(r.getString("num_pedido"));
        FECHA.setText(r.getString("fecha"));
        connection = DriverManager.getConnection(url, user, pass);
        String query2 = "select nombre from clientes";
        ResultSet r2;
        Statement s2 = connection.createStatement();
        r2 = s2.executeQuery(query2);
        DefaultComboBoxModel value1 = new DefaultComboBoxModel();
        
        while(r2.next()){
            value1.addElement(r2.getString("NOMBRE"));
        }
        NOMCLIENTE.setModel(value1);
        NOMCLIENTE.setSelectedItem(getNOMCliente(r.getString("CLIENTE"))); 
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<String>();
        SIGUIENTE = new javax.swing.JButton();
        ULTIMA = new javax.swing.JButton();
        NUEVA = new javax.swing.JButton();
        MODIFICAR = new javax.swing.JButton();
        PRIMERA = new javax.swing.JButton();
        ANTERIOR = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        FECHA = new javax.swing.JTextField();
        NUM_PEDIDO = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        CONFIRMAR = new javax.swing.JButton();
        CANCELAR = new javax.swing.JButton();
        BORRAR = new javax.swing.JButton();
        NOMCLIENTE = new javax.swing.JComboBox();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SIGUIENTE.setText("SIGUIENTE");
        SIGUIENTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGUIENTEActionPerformed(evt);
            }
        });

        ULTIMA.setText("ULTIMA");
        ULTIMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ULTIMAActionPerformed(evt);
            }
        });

        NUEVA.setText("NUEVA");
        NUEVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUEVAActionPerformed(evt);
            }
        });

        MODIFICAR.setText("MODIFICAR");
        MODIFICAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODIFICARActionPerformed(evt);
            }
        });

        PRIMERA.setText("PRIMERA");
        PRIMERA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRIMERAActionPerformed(evt);
            }
        });

        ANTERIOR.setText("ANTERIOR");
        ANTERIOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANTERIORActionPerformed(evt);
            }
        });

        jLabel1.setText("NUM_PEDIDO");

        jLabel3.setText("CLIENTE");

        jLabel6.setText("FECHA");

        FECHA.setEditable(false);
        FECHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FECHAActionPerformed(evt);
            }
        });

        NUM_PEDIDO.setEditable(false);
        NUM_PEDIDO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUM_PEDIDOActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Pedidos");

        CONFIRMAR.setText("CONFIRMAR");
        CONFIRMAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CONFIRMARActionPerformed(evt);
            }
        });

        CANCELAR.setText("CANCELAR");
        CANCELAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CANCELARActionPerformed(evt);
            }
        });

        BORRAR.setText("BORRAR");
        BORRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BORRARActionPerformed(evt);
            }
        });

        NOMCLIENTE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        NOMCLIENTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NOMCLIENTEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 242, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(CONFIRMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(CANCELAR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(BORRAR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(PRIMERA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ULTIMA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SIGUIENTE, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ANTERIOR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NUEVA, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MODIFICAR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NUM_PEDIDO)
                            .addComponent(FECHA)
                            .addComponent(NOMCLIENTE, 0, 95, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NUM_PEDIDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(25, 25, 25)
                        .addComponent(FECHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NOMCLIENTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PRIMERA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ANTERIOR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NUEVA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SIGUIENTE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ULTIMA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MODIFICAR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(BORRAR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CONFIRMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CANCELAR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SIGUIENTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGUIENTEActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if(r.next()){;
            FECHA.setText(r.getString("FECHA"));
            NUM_PEDIDO.setText(r.getString("NUM_PEDIDO"));
        NOMCLIENTE.setSelectedItem(getNOMCliente(r.getString("CLIENTE")));
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SIGUIENTEActionPerformed

    private void ULTIMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ULTIMAActionPerformed
        try {
            // TODO add your handling code here:
            r.last();
            FECHA.setText(r.getString("FECHA"));
            NUM_PEDIDO.setText(r.getString("NUM_PEDIDO"));
        NOMCLIENTE.setSelectedItem(getNOMCliente(r.getString("CLIENTE")));          
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ULTIMAActionPerformed

    private void PRIMERAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRIMERAActionPerformed
        try {
            // TODO add your handling code here:
            r.first();
                  FECHA.setText(r.getString("FECHA"));
            NUM_PEDIDO.setText(r.getString("NUM_PEDIDO"));
        NOMCLIENTE.setSelectedItem(getNOMCliente(r.getString("CLIENTE")));
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PRIMERAActionPerformed

    private void ANTERIORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANTERIORActionPerformed
        // TODO add your handling code here:
        try {
            if(r.previous()){
                    FECHA.setText(r.getString("FECHA"));
            NUM_PEDIDO.setText(r.getString("NUM_PEDIDO"));
        NOMCLIENTE.setSelectedItem(getNOMCliente(r.getString("CLIENTE")));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ANTERIORActionPerformed

    private void FECHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FECHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FECHAActionPerformed

    private void NUEVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUEVAActionPerformed
        // TODO add your handling code here:
        var=1;
        NUM_PEDIDO.setEditable(true);
        FECHA.setEditable(true);
            NUM_PEDIDO.setText("");
            FECHA.setText("");
            CONFIRMAR.setVisible(true);
            CANCELAR.setVisible(true);
            PRIMERA.setEnabled(false);
            ULTIMA.setEnabled(false);
            ANTERIOR.setEnabled(false);
            SIGUIENTE.setEnabled(false);
            MODIFICAR.setEnabled(false);
             BORRAR.setEnabled(false);
             NUEVA.setEnabled(false);
            // NOMFABRICANTE.setSelectedItem(getNOMFABRICANTE(r.getInt("FABRICANTE")));
    }//GEN-LAST:event_NUEVAActionPerformed

    private void MODIFICARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODIFICARActionPerformed
     FECHA.setEditable(true);
        CONFIRMAR.setVisible(true);
            CANCELAR.setVisible(true);
            PRIMERA.setEnabled(false);
            ULTIMA.setEnabled(false);
            ANTERIOR.setEnabled(false);
            SIGUIENTE.setEnabled(false);
            MODIFICAR.setEnabled(false);
             BORRAR.setEnabled(false);
             NUEVA.setEnabled(false);
             var=2;
    }//GEN-LAST:event_MODIFICARActionPerformed

    private void NUM_PEDIDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUM_PEDIDOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NUM_PEDIDOActionPerformed

    private void CONFIRMARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CONFIRMARActionPerformed
        // TODO add your handling code here:
        if (var==1){
           
        try { //COD_ARTICULO.setEditable(false);
            String vNUM_PEDIDO,vFECHA,vCLI,vCLIENTE;
    vNUM_PEDIDO=NUM_PEDIDO.getText();
    vFECHA=FECHA.getText();
    vCLI=(String)NOMCLIENTE.getSelectedItem();
 vCLIENTE=getCodFabricante(vCLI);
    String url="jdbc:mysql://localhost:3306/entornodedesarrollo";
    String user="root";
    String pass="";
            connection = DriverManager.getConnection(url,user,pass);
    Statement s=connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String query = "insert pedidos values ('" + vNUM_PEDIDO + "','" + vFECHA + "','" + vCLIENTE + "')";
    int resultado=s.executeUpdate(query);
String query2= "select * from pedidos";
            r=s.executeQuery(query2);
    r.first();
            CONFIRMAR.setVisible(false);
            CANCELAR.setVisible(false);
            PRIMERA.setEnabled(true);
            ULTIMA.setEnabled(true);
            ANTERIOR.setEnabled(true);
            SIGUIENTE.setEnabled(true);
            MODIFICAR.setEnabled(true);
             BORRAR.setEnabled(true);
             NUEVA.setEnabled(true);
                     NUM_PEDIDO.setEditable(false);
                     FECHA.setEditable(false);

}  catch (SQLException ex) {
    Logger.getLogger(Frabricantes.class.getName()).log(Level.SEVERE, null, ex);
} }
        if (var==2)try{
       String vNum, vFecha, vCliente;
            vNum=NUM_PEDIDO.getText();
            vFecha=FECHA.getText();
                     
            
            vCliente=(String)NOMCLIENTE.getSelectedItem();
            String nif = getCodFabricante(vCliente);
            String url = "jdbc:mysql://localhost:3306/entornodedesarrollo";
            String user = "root";
            String pass = "";
            Connection connection = DriverManager.getConnection(url, user,pass);
        
            Statement s = connection.createStatement();
            String query = "update pedidos set CLIENTE='" + nif + "', FECHA='" + vFecha + "' WHERE NUM_PEDIDO='" + vNum +"'";
             int resultado=s.executeUpdate(query);
String query2= "select * from pedidos";
            r=s.executeQuery(query2);
    r.first();
            CONFIRMAR.setVisible(false);
            CANCELAR.setVisible(false);
            PRIMERA.setEnabled(true);
            ULTIMA.setEnabled(true);
            ANTERIOR.setEnabled(true);
            SIGUIENTE.setEnabled(true);
            MODIFICAR.setEnabled(true);
             BORRAR.setEnabled(true);
             NUEVA.setEnabled(true);
                     NUM_PEDIDO.setEditable(false);
                     FECHA.setEditable(false);
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        if (var==3){
         try {String vNum;
        vNum = NUM_PEDIDO.getText();
        String url = "jdbc:mysql://localhost:3306/entornodedesarrollo";
        String user = "root";
        String pass = "";
        Connection connection = DriverManager.getConnection(url, user, pass);
        Statement s = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        String query = "delete FROM pedidos WHERE NUM_PEDIDO='"+vNum+"'";
        int resultado = s.executeUpdate(query);
        String query2 = "select * from pedidos";
        r = s.executeQuery(query2);
        r.first();
        NUM_PEDIDO.setText(r.getString("num_pedido"));
        FECHA.setText(r.getString("fecha"));
        NOMCLIENTE.setSelectedItem(r.getString("CLIENTE"));
        
        CONFIRMAR.setVisible(false);
            CANCELAR.setVisible(false);
            PRIMERA.setEnabled(true);
            ULTIMA.setEnabled(true);
            ANTERIOR.setEnabled(true);
            SIGUIENTE.setEnabled(true);
            MODIFICAR.setEnabled(true);
             BORRAR.setEnabled(true);
             NUEVA.setEnabled(true);
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }}
    }//GEN-LAST:event_CONFIRMARActionPerformed

    private void CANCELARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CANCELARActionPerformed
         try {
            // TODO add your handling code here:
            r.first();
        NUM_PEDIDO.setText(r.getString("num_pedido"));
        FECHA.setText(r.getString("fecha"));
        NOMCLIENTE.setSelectedItem(r.getString("CLIENTE"));
        
        CONFIRMAR.setVisible(false);
            CANCELAR.setVisible(false);
            PRIMERA.setEnabled(true);
            ULTIMA.setEnabled(true);
            ANTERIOR.setEnabled(true);
            SIGUIENTE.setEnabled(true);
            MODIFICAR.setEnabled(true);
             BORRAR.setEnabled(true);
             NUEVA.setEnabled(true);
        NUM_PEDIDO.setEditable(false);
        FECHA.setEditable(false);
           }catch (SQLException ex) {
            Logger.getLogger(cliente.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_CANCELARActionPerformed

    private void BORRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BORRARActionPerformed
            CONFIRMAR.setVisible(true);
            CANCELAR.setVisible(true);
            PRIMERA.setEnabled(false);
            ULTIMA.setEnabled(false);
            ANTERIOR.setEnabled(false);
            SIGUIENTE.setEnabled(false);
            MODIFICAR.setEnabled(false);
             BORRAR.setEnabled(false);
             NUEVA.setEnabled(false);
             var=3;
    }//GEN-LAST:event_BORRARActionPerformed

    private void NOMCLIENTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOMCLIENTEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NOMCLIENTEActionPerformed

    
    //metodos
    public static String getNOMCliente(String codigo){
         String nombre="";
        
        try{
            String url = "jdbc:mysql://localhost:3306/entornodedesarrollo";
            String user = "root";
            String pass = "";
            Connection connection = DriverManager.getConnection(url,user,pass);
            Statement s = connection.createStatement();
            String query2 = "select nombre FROM clientes where nif='"+codigo+"'";
        ResultSet r2;
            r2 = s.executeQuery(query2);
            r2.first();
            nombre = r2.getString("NOMBRE");
        } catch (SQLException ex) {
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        return nombre;
    }
    
    public static String getCodFabricante(String nombre){
      String codigo="";
        
        try{
            String url = "jdbc:mysql://localhost:3306/entornodedesarrollo";
            String user = "root";
            String pass = "";
            Connection connection = DriverManager.getConnection(url,user,pass);
            Statement s = connection.createStatement();
            String query2 = "select NIF FROM clientes where nombre='"+nombre+"'";
            ResultSet r2;
            r2 = s.executeQuery(query2);
            r2.first();
            codigo = r2.getString("NIF");
        } catch (SQLException ex){
            Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        return codigo;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new pedido().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(pedido.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ANTERIOR;
    private javax.swing.JButton BORRAR;
    private javax.swing.JButton CANCELAR;
    private javax.swing.JButton CONFIRMAR;
    private javax.swing.JTextField FECHA;
    private javax.swing.JButton MODIFICAR;
    private javax.swing.JComboBox NOMCLIENTE;
    private javax.swing.JButton NUEVA;
    private javax.swing.JTextField NUM_PEDIDO;
    private javax.swing.JButton PRIMERA;
    private javax.swing.JButton SIGUIENTE;
    private javax.swing.JButton ULTIMA;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
